<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!--配置spring的ioc，把service对象配置进来-->
    <bean id="accountService" class="cn.xhuidong.service.impl.AccountServiceImpl"></bean>
    <!--spring中基于xml的aop配置步骤
            1.把通知bean也交给spring来管理
            2.使用aop：config标签来表明开始AOP配置
            3.使用aop：aspect标签表明开始配置切面
            4.在aop：aspect标签的内部使用对应标签来配置通知的类型
                    我们现在示例是让printLog方法在切入点方法执行之前执行，
                    所以是前置通知aop：before：表示配置前置通知
                     method属性：用于指定logger类中的哪个方法是前置通知


                     ！！！！！！！！切到业务层实现类下的所有方法！！！！！！！！！！！！！！
                                * cn.xhuidong.service.impl.*.*(..)

    -->



    <!--配置Loggler类-->
    <bean id="logger" class="cn.xhuidong.utils.Logger"></bean>
   <!--配置AOP-->
    <aop:config>
        <!--配置切面-->
        <aop:aspect ref="logger">
            <aop:before method="beforePrintLog"  pointcut="execution(public void cn.xhuidong.service.impl.AccountServiceImpl.saveAccount())"></aop:before>
            <aop:after-returning method="afterReturningPrintLog"  pointcut="execution(public void cn.xhuidong.service.impl.AccountServiceImpl.saveAccount())"></aop:after-returning>
            <aop:after-throwing method="afterThrowingPrintLog"  pointcut="execution(public void cn.xhuidong.service.impl.AccountServiceImpl.saveAccount())"></aop:after-throwing>
            <aop:after method="printLog"  pointcut="execution(public void cn.xhuidong.service.impl.AccountServiceImpl.saveAccount())"></aop:after>
        </aop:aspect>
    </aop:config>

</beans>